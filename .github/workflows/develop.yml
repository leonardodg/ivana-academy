name: Deploy DEVELOP to EC2

on:
  push:
    branches:
      - develop

jobs:
  docker:
    name: Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: leodg/moodle-academy:develop

  integration:
    name: Integration checks
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checking out moodle
        uses: actions/checkout@v4
        with:
          repository: leonardodg/ivana-academy
          ref: develop

      - name: Prepare moodle-docker environment
        run: |
          cp config.docker-develop.php config.php
          export thisfile=$( readlink "${BASH_SOURCE[0]}" ) || thisfile="${BASH_SOURCE[0]}"
          export basedir="$( cd "$( dirname "$thisfile" )/../" && pwd -P )"
          echo "Running integration tests from ${basedir}"
          echo ${basedir}
          echo ${MOODLE_DOCKER_WWWROOT}
          export ASSETDIR="${basedir}/assets"
          docker compose -f "docker-compose-develop.yml" up -d
        env:
          MOODLE_DOCKER_WWWROOT: ${{ github.workspace }}

      - name: Run moodle-docker tests
        shell: bash
        run: |
          echo "Checking that PHP CLI is available"
          docker compose exec -T webserver php -r 'echo "Up!";'
          echo "Checking that the web server is up"

      - name: Stop moodle-docker
        run: |
          echo "Stopping down container"
          basedir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )"
          docker compose -f "${{ github.workspace }}/docker-compose-develop.yml" down


  PHPUnit:
    needs: integration
    runs-on: ubuntu-latest

    steps:
      - name: Checking out moodle-docker
        uses: actions/checkout@v4

      - name: Checking out moodle
        uses: actions/checkout@v4
        with:
          repository: leonardodg/ivana-academy

      - name: Run moodle-docker TESTS environment
        run: |
          cp config.docker-develop.php config.php
          echo "START PHPUNIT tests from ${basedir}"
          export ASSETDIR="${basedir}/assets"
          docker compose -f "docker-compose-develop.yml" up -d
          docker compose exec -T webserver php admin/tool/phpunit/cli/init.php
          echo "Running PHPUNIT tests"
          docker compose exec -T webserver vendor/bin/phpunit
          echo "Stopping down container"
          docker compose -f "docker-compose-develop.yml" down

        env:
          basedir: ${{ github.workspace }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Deploy via SSH by RSYNC
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ vars.REMOTE_TARGET }}
          SCRIPT_BEFORE: |
            sudo apt install rsync -y
          SCRIPT_AFTER: |
            whoami
            ls -al
            echo $RSYNC_STDOUT
            cp ${{ vars.REMOTE_TARGET }}/config-docker.php ${{ vars.REMOTE_TARGET }}/config.php

      - name: Deploy to EC2 Instance
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo docker stop moodle || true
            sudo docker rm moodle || true
            sudo docker pull leodg/moodle-academy:develop
            sudo docker run --restart=always --name moodle -p 80:80 -p 443:443 -v ${{ vars.REMOTE_TARGET }}:/var/www/html -v /home/admin/moodledata:${{ vars.MOODLE_DATA }} -v /home/admin/local/letsencrypt/:/etc/ssl/certs/letsencrypt/ -e MOODLE_URL=${{ vars.MOODLE_URL }} -e MOODLE_DBTYPE=${{ vars.MOODLE_DBTYPE }} -e MOODLE_DBHOST=${{ secrets.MOODLE_DBHOST }} -e MOODLE_DBNAME=${{ secrets.MOODLE_DBNAME }} -e MOODLE_DBUSER=${{ secrets.MOODLE_DBUSER }} -e MOODLE_DBPASS=${{ secrets.MOODLE_DBPASS }} -e MOODLE_DATA=${{ vars.MOODLE_DATA }} -e ENVIRONMENT=develop -d leodg/moodle-academy:develop
